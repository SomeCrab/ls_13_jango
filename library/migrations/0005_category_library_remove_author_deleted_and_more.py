# Generated by Django 5.2.1 on 2025-06-05 08:48

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("library", "0004_book_amount_of_pages_book_description_book_jenre"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=30, unique=True, verbose_name="Category Title"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Categories",
            },
        ),
        migrations.CreateModel(
            name="Library",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=100, verbose_name="Library Title"),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Location"
                    ),
                ),
                (
                    "website",
                    models.URLField(blank=True, null=True, verbose_name="Website"),
                ),
            ],
            options={
                "verbose_name_plural": "Libraries",
            },
        ),
        migrations.RemoveField(
            model_name="author",
            name="deleted",
        ),
        migrations.RemoveField(
            model_name="book",
            name="amount_of_pages",
        ),
        migrations.RemoveField(
            model_name="book",
            name="jenre",
        ),
        migrations.AddField(
            model_name="author",
            name="is_deleted",
            field=models.BooleanField(
                default=False,
                help_text="When the author is deleted is set False",
                verbose_name="Is Deleted",
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="Genre",
            field=models.CharField(
                blank=True,
                choices=[
                    ("Fiction", "Fiction"),
                    ("Non Fiction", "Non-Fiction"),
                    ("Sci-Fy", "Science Fiction"),
                    ("Fantasy", "Fantasy"),
                    ("Mystery", "Mystery"),
                    ("Biography", "Biography"),
                    ("Default", "not_set"),
                ],
                max_length=100,
                null=True,
                verbose_name="Genre",
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="amount_pages",
            field=models.PositiveIntegerField(
                blank=True,
                null=True,
                validators=[django.core.validators.MaxValueValidator(10000)],
                verbose_name="Amount of Pages",
            ),
        ),
        migrations.AlterField(
            model_name="author",
            name="date_of_birth",
            field=models.DateField(blank=True, null=True, verbose_name="Date of Birth"),
        ),
        migrations.AlterField(
            model_name="author",
            name="first_name",
            field=models.CharField(max_length=100, verbose_name="First Name"),
        ),
        migrations.AlterField(
            model_name="author",
            name="last_name",
            field=models.CharField(max_length=100, verbose_name="Last Name"),
        ),
        migrations.AlterField(
            model_name="author",
            name="profile",
            field=models.URLField(blank=True, null=True, verbose_name="Profile URL"),
        ),
        migrations.AlterField(
            model_name="author",
            name="rating",
            field=models.IntegerField(
                blank=True,
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(1),
                    django.core.validators.MaxValueValidator(10),
                ],
                verbose_name="Rating in AWS",
            ),
        ),
        migrations.AlterField(
            model_name="book",
            name="author",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="library.author",
                verbose_name="Author",
            ),
        ),
        migrations.AlterField(
            model_name="book",
            name="description",
            field=models.TextField(blank=True, null=True, verbose_name="Summary"),
        ),
        migrations.AlterField(
            model_name="book",
            name="publication_date",
            field=models.DateField(null=True, verbose_name="Publication Date"),
        ),
        migrations.AlterField(
            model_name="book",
            name="title",
            field=models.CharField(max_length=100, verbose_name="Book Title"),
        ),
        migrations.AddField(
            model_name="book",
            name="category",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="books",
                to="library.category",
                verbose_name="Category",
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="libraries",
            field=models.ManyToManyField(
                related_name="books", to="library.library", verbose_name="Library"
            ),
        ),
        migrations.CreateModel(
            name="Member",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=50, verbose_name="First Name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=50, verbose_name="Last Name"),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email"
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female")],
                        max_length=20,
                        verbose_name="Gender",
                    ),
                ),
                ("date_of_birth", models.DateField(verbose_name="Date of Birth")),
                (
                    "age",
                    models.PositiveIntegerField(editable=False, verbose_name="Age"),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("A", "Administrator"),
                            ("B", "Reader"),
                            ("E", "Employee"),
                        ],
                        max_length=30,
                        verbose_name="Role",
                    ),
                ),
                ("active", models.BooleanField(default=True, verbose_name="Is_active")),
                (
                    "libraries",
                    models.ManyToManyField(
                        related_name="members",
                        to="library.library",
                        verbose_name="Library",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="book",
            name="publisher",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="library.member",
                verbose_name="Publisher",
            ),
        ),
    ]
